name: Build Module

on:
  push:
    branches: ['mini']

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Upload Asset
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:          
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get Id
        id: mId
        run: echo "::set-output name=id::$(grep "^id=" module.prop|cut -d'=' -f2)"
        
      - name: Get Version
        id: mVersion
        run: echo "::set-output name=version::$(grep "^version=" module.prop|cut -d'=' -f2)"

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: zip -r "${{ steps.mId.outputs.id }}.v${{ steps.mVersion.outputs.version }}.zip" . -x "README.md" ".git/*" ".github/*" 

      - name: Instana Release
        # You may pin to the exact commit or the version.
        # uses: taimos/github-action-instana-release@965e6df38ba41009380ba095b82b33e749d37867
        uses: taimos/github-action-instana-release@v3
        with:
          # Name of the release
          releaseName: "${{ steps.mVersion.outputs.version }}"
          # Scope of the release
          # releaseScope: # optional, default is {}
    
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ steps.mId.outputs.id }}.v${{ steps.mVersion.outputs.version }}.zip
          asset_name: ${{ steps.mId.outputs.id }}.v${{ steps.mVersion.outputs.version }}.zip
          asset_content_type: application/zip
